// Code generated by go-swagger; DO NOT EDIT.

package range_restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// RangeSearchOKCode is the HTTP code returned for type RangeSearchOK
const RangeSearchOKCode int = 200

/*RangeSearchOK Request was processed successfully.

swagger:response rangeSearchOK
*/
type RangeSearchOK struct {
}

// NewRangeSearchOK creates RangeSearchOK with default headers values
func NewRangeSearchOK() *RangeSearchOK {

	return &RangeSearchOK{}
}

// WriteResponse to the client
func (o *RangeSearchOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// RangeSearchBadRequestCode is the HTTP code returned for type RangeSearchBadRequest
const RangeSearchBadRequestCode int = 400

/*RangeSearchBadRequest Hash prefix must be exactly 5 characters long.

swagger:response rangeSearchBadRequest
*/
type RangeSearchBadRequest struct {
}

// NewRangeSearchBadRequest creates RangeSearchBadRequest with default headers values
func NewRangeSearchBadRequest() *RangeSearchBadRequest {

	return &RangeSearchBadRequest{}
}

// WriteResponse to the client
func (o *RangeSearchBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// RangeSearchNotFoundCode is the HTTP code returned for type RangeSearchNotFound
const RangeSearchNotFoundCode int = 404

/*RangeSearchNotFound No results found.

swagger:response rangeSearchNotFound
*/
type RangeSearchNotFound struct {
}

// NewRangeSearchNotFound creates RangeSearchNotFound with default headers values
func NewRangeSearchNotFound() *RangeSearchNotFound {

	return &RangeSearchNotFound{}
}

// WriteResponse to the client
func (o *RangeSearchNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
